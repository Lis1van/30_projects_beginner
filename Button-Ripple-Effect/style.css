/*Разберем файл CSS по блокам, чтобы понять, как стилизуется страница с кнопкой, создающей эффект ряби при нажатии.*/

/*### Разбор CSS-кода*/


body {
    margin: 0;
    display: flex;
    justify-content: center;
    height: 100vh;
    align-items: center;
    background-color: aliceblue;
    font-family: sans-serif;
}


/*- **`body`**:*/
/*- **`margin: 0;`**: Убирает все внешние отступы по умолчанию, что позволяет точно контролировать расположение элементов на странице.*/
/*- **`display: flex;`**: Применяет flexbox к `<body>`, что позволяет удобно выравнивать дочерние элементы.*/
/*- **`justify-content: center;`**: Центрирует контент по горизонтали в контейнере.*/
/*- **`height: 100vh;`**: Устанавливает высоту тела страницы равной 100% от высоты окна браузера.*/
/*- **`align-items: center;`**: Центрирует контент по вертикали в контейнере.*/
/*- **`background-color: aliceblue;`**: Задает светло-голубой фон для страницы.*/
/*- **`font-family: sans-serif;`**: Применяет семейство шрифтов sans-serif ко всему тексту на странице.*/


:root {
    --xPos: 0;
    --yPos: 0;
}


/*- **`:root`**:*/
/*- Псевдокласс `:root` представляет корневой элемент (т.е. `<html>`) и используется для определения CSS-переменных (custom properties),
 доступных по всему документу.*/
/*- **`--xPos`** и **`--yPos`**: Переменные, которые будут содержать координаты положения ряби (ripple) относительно кнопки.
 По умолчанию они установлены в `0`.*/


.btn {
    background-color: pink;
    padding: 20px 40px;
    border-radius: 5px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, .3);
    text-decoration: none;
    color: black;
    position: relative;
    overflow: hidden;
}


/*- **`.btn`**:*/
/*- **`background-color: pink;`**: Устанавливает розовый фон для кнопки.*/
/*- **`padding: 20px 40px;`**: Добавляет внутренние отступы по 20 пикселей сверху и снизу и по 40 пикселей слева и справа.*/
/*- **`border-radius: 5px;`**: Округляет углы кнопки с радиусом в 5 пикселей.*/
/*- **`box-shadow: 0 4px 8px rgba(0, 0, 0, .3);`**: Добавляет тень с размытой границей, что делает кнопку более объемной.*/
/*- **`text-decoration: none;`**: Убирает стандартное подчеркивание текста ссылки.*/
/*- **`color: black;`**: Устанавливает цвет текста на кнопке черным.*/
/*- **`position: relative;`**: Позволяет потомкам кнопки (например, псевдоэлементу `::before`) позиционироваться относительно самого элемента `.btn`.*/
/*- **`overflow: hidden;`**: Скрывает все, что выходит за границы кнопки. Это важно для эффекта ряби, чтобы он не выходил за пределы кнопки.*/


.btn span {
    position: relative;
    z-index: 1;
}


/*- **`.btn span`**:*/
/*- **`position: relative;`**: Позволяет этому элементу быть позиционированным относительно своего обычного положения.
Это важно, чтобы текст оставался над рябью.*/
/*- **`z-index: 1;`**: Устанавливает порядок наложения элементов, делая текст поверх псевдоэлемента `::before`, который создает эффект ряби.*/


.btn::before {
    content: '';
    position: absolute;
    background-color: orangered;
    width: 0;
    height: 0;
    left: var(--xPos);
    top: var(--yPos);
    transform: translate(-50%, -50%);
    border-radius: 50%;
    transition: width .5s, height .5s;
}


/*- **`.btn::before`**:*/
/*- **`content: '';`**: Создает пустой контент для псевдоэлемента `::before`, который будет использоваться для ряби.*/
/*- **`position: absolute;`**: Позиционирует псевдоэлемент относительно ближайшего родительского
 элемента с `position: relative` (в данном случае, `.btn`).*/
/*- **`background-color: orangered;`**: Устанавливает цвет фона ряби как ярко-красный.*/
/*- **`width: 0;`** и **`height: 0;`**: Начальные размеры ряби равны нулю. Они будут изменяться при наведении.*/
/*- **`left: var(--xPos);`** и **`top: var(--yPos);`**: Устанавливает начальное положение ряби, используя CSS-переменные
для координат (они задаются при клике на кнопку).*/
/*- **`transform: translate(-50%, -50%);`**: Центрирует рябь относительно координат `left` и `top`.*/
/*- **`border-radius: 50%;`**: Делает рябь круглой.*/
/*- **`transition: width .5s, height .5s;`**: Анимация изменения ширины и высоты ряби с продолжительностью 0.5 секунды.*/


.btn:hover::before {
    width: 300px;
    height: 300px;
}


/*- **`.btn:hover::before`**:*/
/*- Применяется к псевдоэлементу `::before` кнопки при наведении на нее.*/
/*- **`width: 300px;`** и **`height: 300px;`**: Увеличивает размер ряби до 300 пикселей в ширину и высоту,
создавая эффект распространения.*/

/*### Общее назначение кода*/

/*    Этот CSS-код предназначен для создания анимации ряби при нажатии на кнопку. Основная идея состоит в том,
что при клике на кнопку создается круг (псевдоэлемент `::before`), который быстро увеличивается в размерах,
 создавая эффект ряби, как будто она распространяется от точки нажатия.*/

/*Эффект достигается благодаря следующим особенностям:*/
/*- Использование CSS-переменных для передачи координат клика.*/
/*- Анимация ширины и высоты ряби.*/
/*- Позиционирование ряби по центру относительно точки клика.*/
/*- Обрезка содержимого кнопки, чтобы рябь не выходила за ее пределы.*/

/*Эти техники объединены для создания впечатляющего визуального эффекта, который можно применить в веб-приложениях
для улучшения пользовательского интерфейса.*/