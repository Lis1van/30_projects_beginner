/*В данном CSS-файле реализована стилизация элементов страницы для приложения "Real-time character counter".
Давайте детально рассмотрим каждый блок CSS-кода и поймем, как он влияет на внешний вид и поведение элементов на странице.*/

/*### CSS Структура*/

/*#### Стили для `body`*/

body {
	margin: 0;
	display: flex;
	justify-content: center;
	height: 100vh;
	align-items: center;
	background-color: orangered;
	font-family: "Pacifico", cursive;
}

/*- **`margin: 0;`**: Убирает стандартные отступы у `body`, обеспечивая отсутствие пустых пространств по краям страницы.*/
/*- **`display: flex;`**: Устанавливает контейнер `body` как flex-контейнер для центрирования контента.*/
/*- **`justify-content: center;`**: Выравнивает элементы по горизонтали, размещая их в центре.*/
/*- **`height: 100vh;`**: Задает высоту `body` равной 100% высоты видимой части окна браузера.*/
/*- **`align-items: center;`**: Центрирует элементы по вертикали внутри `body`.*/
/*- **`background-color: orangered;`**: Устанавливает фоновый цвет страницы ярко-оранжевым.*/
/*- **`font-family: "Pacifico", cursive;`**: Устанавливает шрифт для текста на странице. Используется шрифт "Pacifico",
а если он недоступен, то любой курсивный шрифт.*/

/*#### Стили для `.container`*/

.container {
	background-color: orange;
	padding: 20px;
	width: 400px;
	border-radius: 10px;
	margin: 5px;
	box-shadow: 8px 8px 16px rgba(0, 0, 0, 0.5);
}

/*- **`background-color: orange;`**: Устанавливает оранжевый фон для контейнера.*/
/*- **`padding: 20px;`**: Добавляет внутренние отступы по 20 пикселей с каждой стороны, создавая пространство между
содержимым контейнера и его границами.*/
/*- **`width: 400px;`**: Устанавливает ширину контейнера в 400 пикселей.*/
/*- **`border-radius: 10px;`**: Скругляет углы контейнера с радиусом 10 пикселей, придавая ему более мягкий вид.*/
/*- **`margin: 5px;`**: Добавляет внешние отступы по 5 пикселей с каждой стороны.*/
/*- **`box-shadow: 8px 8px 16px rgba(0,0,0,0.5);`**: Применяет тень к контейнеру, создавая ощущение глубины.
Тень смещена на 8 пикселей вправо и вниз с радиусом размытия 16 пикселей и полупрозрачным черным цветом.*/

/*#### Стили для `.textarea`*/

.textarea {
	resize: none;
	width: 100%;
	height: 100px;
	background-color: #fafa6c;
	font-size: 16px;
	font-family: sans-serif;
	padding: 10px;
	box-sizing: border-box;
	border: solid 2px darkgoldenrod;
}

/*- **`resize: none;`**: Отключает возможность изменения размера текстовой области пользователем.*/
/*- **`width: 100%;`**: Устанавливает ширину текстовой области равной 100% ширины родительского контейнера.*/
/*- **`height: 100px;`**: Устанавливает высоту текстовой области в 100 пикселей.*/
/*- **`background-color: #fafa6c;`**: Устанавливает фоновый цвет текстовой области светло-желтым.*/
/*- **`font-size: 16px;`**: Устанавливает размер текста внутри текстовой области равным 16 пикселям.*/
/*- **`font-family: sans-serif;`**: Задает использование шрифта без засечек.*/
/*- **`padding: 10px;`**: Добавляет внутренние отступы в 10 пикселей, создавая пространство между текстом и
границей текстовой области.*/
/*- **`box-sizing: border-box;`**: Включает границы и внутренние отступы в общую ширину и высоту элемента,
 что облегчает управление размером элемента.*/
/*- **`border: solid 2px darkgoldenrod;`**: Устанавливает рамку вокруг текстовой области толщиной 2 пикселя и
цветом тёмного золотого оттенка.*/

/*#### Стили для `.counter-container`*/

.counter-container {
	display: flex;
	justify-content: space-between;
	margin-top: 10px;
	padding: 0 5px;
}

/*- **`display: flex;`**: Устанавливает контейнер `.counter-container` как flex-контейнер.*/
/*- **`justify-content: space-between;`**: Выравнивает вложенные элементы с распределением пространства между ними.*/
/*- **`margin-top: 10px;`**: Добавляет верхний отступ в 10 пикселей, чтобы отделить счетчики от текстовой области.*/
/*- **`padding: 0 5px;`**: Добавляет внутренние отступы по 5 пикселей слева и справа.*/

/*#### Стили для `p` в `.counter-container`*/

.counter-container p {
	font-size: 16px;
	color: #515050;
}

/*- **`font-size: 16px;`**: Устанавливает размер шрифта текста в параграфах внутри `.counter-container` равным 16 пикселям.*/
/*- **`color: #515050;`**: Устанавливает цвет текста параграфов темно-серым (#515050).*/

/*#### Стили для `.total-container` и `.remaining-container`*/

.total-container {
	color: #3f069e;
}

.remaining-container {
	color: red;
}

/*- **`.total-container`**:*/
/*- **`color: #3f069e;`**: Задает цвет текста для элемента с общим количеством символов. Это темно-синий оттенок (#3f069e).*/

/*- **`.remaining-container`**:*/
/*- **`color: red;`**: Устанавливает красный цвет текста для элемента, показывающего количество оставшихся символов.*/

/*### Обобщение*/

/*	CSS стилизация обеспечивает:*/

/*- Центрирование контента на странице.*/
/*- Привлекательный дизайн контейнера для ввода текста.*/
/*- Четкое отображение текущего и оставшегося количества символов.*/
/*- Удобочитаемость и визуальную иерархию.*/

/*  Теперь рассмотрим, как JavaScript взаимодействует с этими элементами для реализации функционала в реальном времени.*/