/* ### CSS Код: Обзор и Описание */

/* Этот CSS файл содержит стили для переключателя темной темы (dark mode toggle).
Переключатель представлен флажком (`checkbox`) и стилизован так, чтобы выглядеть как
ползунок. Давайте рассмотрим каждый блок кода и разберем, как он работает. */

body{
  margin: 0;
  display: flex;
  justify-content: center;
  height: 100vh;
  align-items: center;
  transition: .4s;
}

/* #### Основные стили для тела страницы (`body`): */

/* - **`margin: 0;`** */
  /* - Убирает отступы по умолчанию вокруг тела страницы. */

/* - **`display: flex;`** */
  /* - Устанавливает Flexbox контейнер, что позволяет удобно центрировать и управлять 
  дочерними элементами. */

/* - **`justify-content: center;`** */
  /* - Центрирует содержимое (переключатель) по горизонтали. */

/* - **`height: 100vh;`** */
  /* - Задает высоту тела страницы на весь видимый экран (100% от высоты вьюпорта). */

/* - **`align-items: center;`** */
  /* - Центрирует содержимое (переключатель) по вертикали. */

/* - **`transition: .4s;`** */
  /* - Добавляет плавный переход для всех изменений стилей в течение 0.4 секунды. 
  Это обеспечивает плавное переключение между светлым и темным режимами. */

.input{
  visibility: hidden;
}

/* #### Стили для скрытия флажка (`checkbox`) (`.input`): */

/* - **`visibility: hidden;`** */
  /* - Скрывает флажок, чтобы он не был видим пользователям. Однако, он остается доступным 
  для взаимодействия через JavaScript и метку (`label`). */

.label{
  position: absolute;
  width: 80px;
  height: 40px;
  background-color: lightgray;
  border-radius: 20px;
  cursor: pointer;
}

/* #### Стили для метки (`.label`): */

/* - **`position: absolute;`** */
  /* - Позволяет позиционировать метку относительно родительского контейнера.
   В данном случае родительский контейнер — это `<body>`. */

/* - **`width: 80px;`** */
  /* - Устанавливает ширину метки, что определяет длину переключателя. */

/* - **`height: 40px;`** */
  /* - Устанавливает высоту метки, что определяет высоту переключателя. */

/* - **`background-color: lightgray;`** */
  /* - Устанавливает светло-серый цвет фона для метки. */

/* - **`border-radius: 20px;`** */
  /* - Закругляет углы метки, придавая ей форму овала. Радиус равен половине высоты, 
  чтобы полностью закруглить углы. */

/* - **`cursor: pointer;`** */
  /* - Меняет курсор на указатель (рука), когда пользователь наводит на метку. 
  Это сигнализирует о том, что элемент кликабельный. */

.circle{
  width: 36px;
  height: 36px;
  background-color: lightseagreen;
  border-radius: 50%;
  position: absolute;
  top: 2px;
  left: 2px;
  animation: toggleOf .4s linear forwards;
}

/* #### Стили для круга внутри переключателя (`.circle`): */

/* - **`width: 36px;`** */
  /* - Устанавливает ширину круга. */

/* - **`height: 36px;`** */
  /* - Устанавливает высоту круга. Она равна ширине, чтобы круг был симметричным. */

/* - **`background-color: lightseagreen;`** */
  /* - Устанавливает цвет фона круга (светло-морской). */

/* - **`border-radius: 50%;`** */
  /* - Делает элемент кругом за счет закругления углов до 50%. */

/* - **`position: absolute;`** */
  /* - Позволяет свободно позиционировать круг внутри родительского элемента (метки). */

/* - **`top: 2px;`** */
  /* - Отступ сверху на 2 пикселя от верхнего края метки. */

/* - **`left: 2px;`** */
  /* - Отступ слева на 2 пикселя от левого края метки. */

/* - **`animation: toggleOf .4s linear forwards;`** */
  /* - Применяет анимацию `toggleOf`, длительностью 0.4 секунды, линейную и завершающуюся 
  на последнем кадре (`forwards`). */

.input:checked + .label{
  background-color: white;
}

/* #### Стили для метки в состоянии включенного флажка (`.input:checked + .label`): */

/* - **`input:checked`**  */
  /* - Селектор для элементов `input` типа `checkbox`, которые отмечены (выбраны). */

/* - **`+ .label`**  */
  /* - Применяет стили к следующему элементу `label`, который является соседним элементом. */

/* - **`background-color: white;`** */
  /* - Меняет цвет фона метки на белый, когда флажок включен. */

@keyframes toggleOn{
  0%{
    transform: translateX(0);
  }
  100%{
    transform: translateX(40px);
  }
}

/* #### Анимация для включения (`@keyframes toggleOn`): */

/* - **`0% { transform: translateX(0); }`** */
  /* - Начальное состояние анимации: круг находится на начальной позиции (левый край). */

/* - **`100% { transform: translateX(40px); }`** */
  /* - Конечное состояние анимации: круг перемещается вправо на 40 пикселей. */

.input:checked + .label .circle{
  animation: toggleOn .4s linear forwards;
  background-color: black;
}

/* #### Стили для круга в состоянии включенного флажка (`.input:checked + .label .circle`): */

/* - **`animation: toggleOn .4s linear forwards;`** */
  /* - Применяет анимацию `toggleOn` на 0.4 секунды с линейным переходом и сохраняет 
  конечное состояние анимации. */

/* - **`background-color: black;`** */
  /* - Меняет цвет круга на черный, когда флажок включен. */

@keyframes toggleOf{
  0%{
    transform: translateX(40px);
  }
  100%{
    transform: translateX(0);
  }
}

/* #### Анимация для выключения (`@keyframes toggleOf`): */

/* - **`0% { transform: translateX(40px); }`** */
  /* - Начальное состояние анимации: круг находится в крайнем правом положении. */

/* - **`100% { transform: translateX(0); }`** */
  /* - Конечное состояние анимации: круг перемещается влево на 40 пикселей, 
  возвращаясь в начальное положение. */

/* ### Общая концепция */

/* Этот CSS файл создает переключатель, который при клике на метку 
(или непосредственно на флажок) анимированно перемещает круг внутри метки, 
сигнализируя о включении или выключении темного режима.  */

/* - **Скрытый флажок**: Визуальная часть флажка скрыта, но он остается активным,
 чтобы управлять состоянием переключателя. */
/* - **Метка и круг**: Метка представляет собой оболочку переключателя, 
а круг — сам переключатель, который двигается внутри метки. */
/* - **Анимации**: Когда флажок переключается, круг анимированно перемещается влево или 
вправо, меняя цвет в зависимости от состояния. */

/* Теперь перейдем к следующему этапу — разбору и объяснению JavaScript файла (`index.js`),
 который управляет функциональностью переключателя. */ */